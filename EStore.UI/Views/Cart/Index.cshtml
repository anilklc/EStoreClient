@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/UILayout/Index.cshtml";
}

<div class="cart-page">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-8">
                <div class="cart-page-inner">
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead class="thead-dark">
                                <tr>
                                    <th>Product</th>
                                    <th>Price</th>
                                    <th>Quantity</th>
                                    <th>Total</th>
                                    <th>Remove</th>
                                </tr>
                            </thead>
                            <tbody class="align-middle">
                                <!-- Sepet ürünleri burada dinamik olarak eklenecek -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="cart-page-inner">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="coupon">
                                <input type="text" placeholder="Coupon Code">
                                <button>Apply Code</button>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="cart-summary">
                                <div class="cart-content">
                                    <h1>Cart Summary</h1>
                                    <p>Sub Total<span>$0</span></p>
                                    <p>Shipping Cost<span>$1</span></p>
                                    <h2>Grand Total<span>$1</span></h2>
                                </div>
                                <div class="cart-btn">
                                    <button class="update-cart">Update Cart</button>
                                    <button class="checkout">Checkout</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const addToCartButtons = document.querySelectorAll('.add-to-cart');
    const cartTableBody = document.querySelector('.cart-page tbody');
    const cartSummary = document.querySelector('.cart-summary');

    addToCartButtons.forEach(button => {
        button.addEventListener('click', function() {
            const productId = this.dataset.id;
            const productName = this.dataset.name;
            const productPrice = parseFloat(this.dataset.price);
            addToCart(productId, productName, productPrice);
        });
    });

    function addToCart(id, name, price) {
        let cart = JSON.parse(localStorage.getItem('cart')) || [];

        let existingProduct = cart.find(product => product.id === id);
        if (existingProduct) {
            existingProduct.quantity++;
        } else {
            cart.push({ id, name, price, quantity: 1 });
        }

        localStorage.setItem('cart', JSON.stringify(cart));
        updateCartDisplay();
    }

    function updateCartDisplay() {
        let cart = JSON.parse(localStorage.getItem('cart')) || [];

        cartTableBody.innerHTML = '';
        let subTotal = 0;

        cart.forEach(product => {
            subTotal += product.price * product.quantity;

            const row = document.createElement('tr');
            row.innerHTML = `
                <td>
                    <div class="img">
                        <a href="#"><img src="~/EStore/img/product-${product.id}.jpg" alt="${product.name}"></a>
                        <p>${product.name}</p>
                    </div>
                </td>
                <td>$${product.price}</td>
                <td>
                    <div class="qty">
                        <button class="btn-minus" data-id="${product.id}"><i class="fa fa-minus"></i></button>
                        <input type="text" value="${product.quantity}">
                        <button class="btn-plus" data-id="${product.id}"><i class="fa fa-plus"></i></button>
                    </div>
                </td>
                <td>$${product.price * product.quantity}</td>
                <td><button class="remove" data-id="${product.id}"><i class="fa fa-trash"></i></button></td>
            `;
            cartTableBody.appendChild(row);
        });

        cartSummary.querySelector('p span').innerText = `$${subTotal}`;
        cartSummary.querySelector('h2 span').innerText = `$${subTotal + 1}`;

        attachEventListeners();
    }

    function attachEventListeners() {
        document.querySelectorAll('.btn-minus').forEach(button => {
            button.addEventListener('click', function() {
                updateQuantity(this.dataset.id, -1);
            });
        });

        document.querySelectorAll('.btn-plus').forEach(button => {
            button.addEventListener('click', function() {
                updateQuantity(this.dataset.id, 1);
            });
        });

        document.querySelectorAll('.remove').forEach(button => {
            button.addEventListener('click', function() {
                removeFromCart(this.dataset.id);
            });
        });
    }

    function updateQuantity(id, delta) {
        let cart = JSON.parse(localStorage.getItem('cart')) || [];

        let product = cart.find(product => product.id === id);
        if (product) {
            product.quantity += delta;
            if (product.quantity <= 0) {
                cart = cart.filter(product => product.id !== id);
            }
        }

        localStorage.setItem('cart', JSON.stringify(cart));
        updateCartDisplay();
    }

    function removeFromCart(id) {
        let cart = JSON.parse(localStorage.getItem('cart')) || [];
        cart = cart.filter(product => product.id !== id);
        localStorage.setItem('cart', JSON.stringify(cart));
        updateCartDisplay();
    }

    document.querySelector('.checkout').addEventListener('click', function() {
        let cart = JSON.parse(localStorage.getItem('cart')) || [];

        fetch('/Cart/Checkout', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(cart)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                localStorage.removeItem('cart');
                updateCartDisplay();
                alert('Order completed successfully!');
            } else {
                alert('There was an error completing your order.');
            }
        });
    });

    // Initial display update
    updateCartDisplay();
});
</script>
