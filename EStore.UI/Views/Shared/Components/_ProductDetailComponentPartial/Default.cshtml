@model List<EStore.Dto.Product.ResultProductDetail>
@foreach (var product in Model)
{
    <div class="product-detail-top">
        <div class="row align-items-center">
            <div class="col-md-5">
                <div class="product-slider-single normal-slider">
                    @foreach (var image in product.ProductImages)
                    {
                        <img src="@image.ImagePath" alt="Product Image">
                    }
                </div>
                <div class="product-slider-single-nav normal-slider">
                    @foreach (var image in product.ProductImages)
                    {
                        <div class="slider-nav-img"><img src="@image.ImagePath" alt="Product Image"></div>
                    }
                </div>
            </div>
            <div class="col-md-7">
                <div class="product-content">
                    <div class="title"><h2>@product.ProductName</h2></div>
                    <div class="price">
                        <h4>Price:</h4>
                        <p>$@product.Price</p>
                    </div>
                    <div class="quantity">
                        <h4>Quantity:</h4>
                        <div class="qty">
                            <button class="btn-minus"><i class="fa fa-minus"></i></button>
                            <input type="text" value="1" min="1" class="quantity-input" id="quantityInput-@product.Id">
                            <button class="btn-plus"><i class="fa fa-plus"></i></button>
                        </div>
                    </div>
                    <div class="p-size">
                        <h4>Size:</h4>
                        <div class="btn-group btn-group-sm">
                            @foreach (var stock in product.Stock)
                            {
                                <button type="button" class="btn" data-product-id="@product.Id" data-product-size="@stock.ProductSize">@stock.ProductSize</button>
                            }
                        </div>
                    </div>
                    <div class="action">
                        <a class="btn add-to-cart" data-id="@product.Id" data-name="@product.ProductName" data-price="@product.Price" href="#"><i class="fa fa-shopping-cart"></i>Add to Cart</a>
                        <a class="btn buy-now" data-id="@product.Id" data-name="@product.ProductName" data-price="@product.Price" href="#"><i class="fa fa-shopping-bag"></i>Buy Now</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row product-detail-bottom">
        <div class="col-lg-12">
            <ul class="nav nav-pills nav-justified">
                <li class="nav-item">
                    <a class="nav-link active" data-toggle="pill" href="#description">Description</a>
                </li>
            </ul>

            <div class="tab-content">
                <div id="description" class="container tab-pane active">
                    <h4>Product description</h4>
                    <p>@product.ProductDescription</p>
                </div>
            </div>
        </div>
    </div>
}
<script>

    
    function addToCart(productId, productName, productPrice, quantity, size) {
        console.log(`Adding ${quantity} ${size} of ${productName} (ID: ${productId}) to cart with price $${productPrice} each.`);
        let cart = JSON.parse(localStorage.getItem('cart')) || [];
        let existingProduct = cart.find(item => item.id === productId && item.size === size);

        if (existingProduct) {
            existingProduct.quantity += quantity;
        } else {
            cart.push({ id: productId, name: productName, price: productPrice, quantity: quantity, size: size });
        }

        localStorage.setItem('cart', JSON.stringify(cart));
        alert('Product added to cart!');
    }


    const addToCartButtons = document.querySelectorAll('.add-to-cart');
    addToCartButtons.forEach(button => {
        button.addEventListener('click', function (event) {
            event.preventDefault();
            const productId = this.dataset.id;
            const productName = this.dataset.name;
            const productPrice = parseFloat(this.dataset.price);
            const quantity = parseInt(document.getElementById(`quantityInput-${productId}`).value);
            const sizeButtons = document.querySelectorAll(`.btn-group-sm button[data-product-id="${productId}"]`);
            let selectedSize = '';
            sizeButtons.forEach(btn => {
                if (btn.classList.contains('active')) {
                    selectedSize = btn.dataset.productSize;
                }
            });
            addToCart(productId, productName, productPrice, quantity, selectedSize);
        });
    });


    const sizeButtons = document.querySelectorAll('.btn-group-sm button');
    sizeButtons.forEach(button => {
        button.addEventListener('click', function () {
            const productId = this.dataset.productId;
            sizeButtons.forEach(btn => {
                btn.classList.remove('active');
            });
            this.classList.add('active');
        });
    });
</script>
